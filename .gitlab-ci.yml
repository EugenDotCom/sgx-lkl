
stages:
  - build

.default_cache: &default_cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .git/modules
      - host-musl
      - lkl
      - sgx-lkl-musl

prepare_submodules:
  image: alpine
  stage: .pre
  cache:
    << : *default_cache
    policy: pull-push
  before_script:
    - apk --no-cache add git
  script:
    - git submodule sync
    - git submodule update --init host-musl sgx-lkl-musl
    - rm -rf lkl
    - git clone --branch sgx-lkl-state --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/madana-io/linux.git lkl


prepare_docker:
  image: docker:latest
  stage: .pre
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build 
      --pull
      --target builder 
      --tag $CI_REGISTRY_IMAGE:latest 
      --cache-from $CI_REGISTRY_IMAGE:latest
      .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    changes:
      - Dockerfile

build_tools:
  image: alpine
  stage: build
  script:
    - exit 0
  artifacts:
    paths:
    - tools/
    expire_in: 3 month


build_simulation:
  image: $CI_REGISTRY_IMAGE:latest
  stage: build
  cache:
    << : *default_cache
    policy: pull
  script:
    - sudo chown -R $UID:$GID .
    #- cd lkl && git status && git checkout -f HEAD && cd ../
    - make sim DEBUG=0
    - mv build simulation
  artifacts:
    paths:
    - simulation/
    expire_in: 3 month

build_hardware:
  image: $CI_REGISTRY_IMAGE:latest
  stage: build
  cache:
    << : *default_cache
    policy: pull
  script:
    - sudo chown -R $UID:$GID .
    #- cd lkl && git status && git checkout -f HEAD && cd ../
    - make DEBUG=0
    - mv build hardware
  artifacts:
    paths:
    - hardware/
    expire_in: 3 month

#trigger_build_docker:
#  stage: .post
#  trigger: madana-io/madana-dan-docker
