# do not use "latest" here, if you want this to work in the future
image: docker:latest

stages:
  - build

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - host-musl/
      - lkl/
      - sgx-lkl-musl/
    policy: pull-push

variables:
  # fill those if you have a proxy in your environment

# Use this if your GitLab runner does not use socket binding
services:
  - docker:dind
before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


Build:
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    # build sgx-lkl
    #- ./sgx-lkl-docker.sh -s build
    #- DOCKER_CMD="cd /sgx-lkl && make sim DEBUG=0"
    - >
      docker build 
      --pull
      --target builder 
      --tag $CI_REGISTRY_IMAGE:latest 
      --cache-from $CI_REGISTRY_IMAGE:latest
      .
    - docker push $CI_REGISTRY_IMAGE:latest
    - >
      docker run --rm --privileged=true 
      -v $PWD:/sgx-lkl --volume $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent
      $CI_REGISTRY_IMAGE:latest 
      /bin/bash -c "cd /sgx-lkl && make clean && make sim DEBUG=0" #&& git submodule update --init 
  artifacts:
    paths:
    - build/
    - tools/
    expire_in: 3 month
